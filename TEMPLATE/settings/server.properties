# Configuration Settings

## Image
# This is the image of the container. It must be reachable by the cluster.
# This should mirror whatever you set for images in the kustomization.yaml,
# though the tag can differ there.
container_image=OWNER/IMAGE:TAG

## ConfigMap
# Where the ConfigMap mounts in the container.
configmap_path=/path/to/config

## LoadBalancer
# If you are enabled the LoadBalancer component, set this to the IP address
# the LoadBalancer will use.
loadbalancer_ip=10.0.0.1

## Storage
# This is the size to set the volumeClaimTemplate in the StatefulSet for the
# primary storage volume.
storeSize=500Mi
# This is the mount path for the primary storage volume in the container.
storage_path=/path/to/storage
# This is the name of the StorageClass to use for the primary storage volume.
# It must be a StorageClass that exists, and the storageClass component must be
# enabled in the kustomization.yaml. If the component is not enabled, this value
# is ignored, and the default StorageClass is used.
storageClass=default

## Server container limits. Set as appropriate for your application.
server_requests_cpu=100m
server_requests_mem=256Mi
server_limits_cpu=1000m
server_limits_mem=1Gi

## Service
## This is the type of Service. It can be ClusterIP, NodePort, or LoadBalancer.
## If you are enabling the LoadBalancer component, you must also set this to LoadBalancer.
service_type=ClusterIP
# This is the protocol of the service running on the service_port.
# It can be TCP or UDP. It is usually TCP.
service_protocol=TCP
### Service Port (the port the Service exposes to the cluster)
service_port=80
### Service Target Port (the port the container exposes)
service_target_port=80
# You can set the service_port_name in name.properties.

## Ingress
# This is the ingressClassName of the Ingress.
ingress_class_name=nginx
# This is the FQDN the Ingress uses to expose the Service outside the cluster.
ingress_fqdn=host.example.com

# Ingress TLS component must be enabled in kustomization.yaml
# This is the name of the Cert Manager Issuer or ClusterIssuer.
# For production, you probably want letsencrypt-prod, or whatever you named it
ingress_cert_manager=letsencrypt-staging
# This is the name of the secret that holds the TLS certificate. It can be any
# arbitrary name, but it must be unique in the namespace.
ingress_tls=app-tls-certificate
